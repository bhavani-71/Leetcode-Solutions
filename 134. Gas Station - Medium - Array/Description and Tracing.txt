https://leetcode.com/problems/gas-station/

🧩 Problem Statement:

You are given two integer arrays `gas` and `cost`, where:
- `gas[i]` represents the amount of gas at station `i`,
- `cost[i]` represents the cost of gas to travel from station `i` to station `i+1`.

Return the starting station index from which you can complete the entire circuit once in a clockwise direction. If it's not possible, return -1.

You begin the journey with an empty tank and can refuel at each station.

---

🪓 Brute Force Approach (Try each station as start):

🔍 Approach:
- Try starting from each gas station one by one.
- Simulate a full round trip for each station and check if total gas never goes below zero.
- If any complete path is valid, return that station index.

⏱️ Time Complexity: O(n²), where `n` is the number of stations.  
🧠 Space Complexity: O(1)

---

💡 Optimized Approach (Greedy Strategy):

✅ Strategy:
- If total gas < total cost, no solution exists → return -1.
- Else, the answer must exist. Use greedy method:
  - Traverse each station and keep track of tank balance.
  - If tank < 0, it means we can't reach the next station, so move start to next index.
  - Reset tank to 0 and continue.
- Final result is the index where we restarted.

⏱️ Time Complexity: O(n)  
🧠 Space Complexity: O(1)

---

🚀 Code Trace Example:

gas = [1,2,3,4,5]  
cost = [3,4,5,1,2]  

Total gas = 15, Total cost = 15 → circuit possible ✅

🔁 i = 0 ➡️ tank = 1 - 3 = -2 ❌ → Move start to i = 1  
🔁 i = 1 ➡️ tank = 0 + 2 - 4 = -2 ❌ → Move start to i = 2  
🔁 i = 2 ➡️ tank = 0 + 3 - 5 = -2 ❌ → Move start to i = 3  
🔁 i = 3 ➡️ tank = 0 + 4 - 1 = 3  
🔁 i = 4 ➡️ tank = 3 + 5 - 2 = 6  
🔁 wrap to i = 0 ➡️ tank = 6 + 1 - 3 = 4  
🔁 i = 1 ➡️ tank = 4 + 2 - 4 = 2  
🔁 i = 2 ➡️ tank = 2 + 3 - 5 = 0 ✅

Start from index 3.

🏁 Final Answer = 3
